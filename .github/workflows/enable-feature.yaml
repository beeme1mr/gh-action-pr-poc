name: Enable Feature
on:
  repository_dispatch:
    types:
      - active-task

jobs:
  test:
    name: Run Enable Feature
    runs-on: ubuntu-latest
    steps:
      - name: my active task
        run: |
          echo "Received active webhook, displaying received data"
          echo "type = ${{ github.event.client_payload.type }}"
          echo "shkeptncontext = ${{ github.event.client_payload.shkeptncontext }}"
          echo "id = ${{ github.event.client_payload.id }}"
      - name: send finished event
        run: |
          echo "Received active webhook, will send back Keptn finished event"
          json=$(cat <<-END
              {
                "data": {
                  "project":"${{ github.event.client_payload.project }}",
                  "stage": "${{ github.event.client_payload.stage}}",
                  "service": "${{ github.event.client_payload.service}}",
                  "status": "succeeded",
                  "result": "pass"
                },
                "source": "github",
                "specversion": "1.0",
                "type": "sh.keptn.event.mytask-active.finished",
                "shkeptncontext": "${{ github.event.client_payload.shkeptncontext }}",
                "triggeredid": "${{ github.event.client_payload.id }}"
              }
          END
          )
          echo "json=$json"
      - name: checkout
        uses: actions/checkout@v3

      # https://github.com/marketplace/actions/read-yaml
      - name: Extract Feature Flag Config from YAML
        id: get-feature-flags
        uses: KJ002/read-yaml@main
        with:
          file: "./config.yml"
          key-path: '["data", "config.json"]'

      - name: Ensure Variant Exists
        uses: sergeysova/jq-action@v2
        id: variant-check
        with:
          cmd: echo '${{ steps.get-feature-flags.outputs.data }}' | jq '.flags."${{ github.event.client_payload.flag_key }}".variants.${{ github.event.client_payload.default_variant }}'
          multiline: true
      # Throw if null
      - name: echo default variant
        run: |
          if [ -z "${{ steps.variant-check.outputs.value }}"]; then echo "NULL"; else echo "Not NULL"; fi

      - name: Enable Feature Flag
        uses: sergeysova/jq-action@v2
        id: enable-feature
        with:
          cmd: |
            echo '${{ steps.get-feature-flags.outputs.data }}' |
            jq '.flags."${{ github.event.client_payload.flag_key }}".defaultVariant="${{ github.event.client_payload.default_variant }}"' |
            jq '.flags."${{ github.event.client_payload.flag_key }}".targeting={}'
          multiline: true

      - name: Update Feature Config
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: "config.yml"
          propertyPath: 'data["config.json"]'
          value: ${{ steps.enable-feature.outputs.value }}
          branch: enable-feature/${{ github.event.client_payload.flag_key }}
          targetBranch: master
          createPR: true
          message: "Update ${{ github.event.client_payload.flag_key }} default variant to '${{ github.event.client_payload.default_variant }}'"
          description: |
            # Overview

            Tests ran and everything looks great!

            Links
              - [Test Results](https://google.com)
          labels: |
            shkeptncontext:${{ github.event.client_payload.shkeptncontext }},
            triggeredid:${{ github.event.client_payload.id }},
            project:${{ github.event.client_payload.project }},
            stage:${{ github.event.client_payload.stage }},
            service:${{ github.event.client_payload.service }}
